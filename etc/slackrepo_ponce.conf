# This is the slackrepo configuration file for the ponce repository.
#
# The priority order for configuration is:
# (1) Environment variables when slackrepo is called
# (2) ~/.genreprc   [for gen_repos_files.sh only]
# (3) ~/.slackreporc
# (4) /etc/slackrepo/slackrepo_ponce.conf
#
# %REPO%, %SLACKVER% and %ARCH% will be replaced by the repo ID, Slackware version and arch

#-------------------------------------------------------------------------------
# Filestore locations

# Where is the local SlackBuild repo:
SBREPO="/var/lib/slackrepo/%REPO%/slackbuilds"

# Where to store cached sources (you will need plenty of space):
SRCREPO="/var/lib/slackrepo/%REPO%/source"

# Where to store built packages (you will need plenty of space):
PKGREPO="/var/lib/slackrepo/%REPO%/packages/%SLACKVER%/%ARCH%"

# Where to keep backups (delete or comment this if you do not want backups):
PKGBACKUP="/var/lib/slackrepo/%REPO%/backups/%SLACKVER%/%ARCH%"

# Where to find hintfiles for this repo:
HINTDIR="/etc/slackrepo/%REPO%/hintfiles"

# Default hintfiles are provided by the 'slackrepo-hints' package,
# which is recommended, but optional.
DEFAULT_HINTDIR="/etc/slackrepo/%REPO%/default_hintfiles/%SLACKVER%"

# Where to store log files:
LOGDIR="/var/log/slackrepo/%REPO%"

# Where to keep the database:
DATABASE="/var/lib/slackrepo/%REPO%/database_%REPO%_%ARCH%.sqlite3"

# If you want to run slackrepo as an ordinary user, you can remove or comment
# all the above definitions, and use something like this instead, and save it
# to .slackreporc in your ordinary user's home directory:
#
#   #  Note: if you use ~ you should NOT use quotes "..."
#
#   SBREPO=~/slackrepo/%REPO%/slackbuilds
#   SRCREPO=~/slackrepo/%REPO%/source
#   PKGREPO=~/slackrepo/%REPO%/packages/%SLACKVER%/%ARCH%
#   PKGBACKUP=~/slackrepo/%REPO%/backups/%SLACKVER%/%ARCH%
#   HINTDIR=~/slackrepo/%REPO%/hintfiles
#   LOGDIR=~/slackrepo/%REPO%/logs
#   DATABASE=~/slackrepo/%REPO%/database_%REPO%_%ARCH%.sqlite3
#   #  You will probably want to use the default hintfiles in /etc:
#   DEFAULT_HINTDIR=/etc/slackrepo/%REPO%/default_hintfiles/%SLACKVER%

# Where to store temporary files:
TMP="/tmp/%REPO%"
# you will need plenty of space -- sage and LibreOffice need 12Gb!

#-------------------------------------------------------------------------------
# Package substitutions
#
# SUBSTITUTE is a space separated list of dependency substitutions.
# To substitute jdk with openjdk:
#   jdk => openjdk
# To remove six:
#   !six
# Optionally, you can use ',' and extra spaces to make the list look nicer.
#
# Example:
# SUBSTITUTE="jdk => openjdk, jack-audio-connection-kit => jack2"

# These substitutions are SBo dependencies that have been superseded by
# packages in Slackware-current. You can add more substitutions.
SUBSTITUTE=" \
  !libwebp \
  !libidn2 \
  !npth \
  !vulkansdk \
  !lame \
  !libbluray \
  !SDL2, !SDL2_gfx, !SDL2_image, !SDL2_mixer, !SDL2_net, !SDL2_ttf \
  !ffmpeg \
  !gst-libav \
  !opencl-headers \
  !libedit \
  !six \
  !libinput, !libwacom, !xf86-input-libinput \
  !sshfs-fuse"

#-------------------------------------------------------------------------------
# Build control variables

# Number of make jobs to set in MAKEFLAGS:
# specify it as (for example) NUMJOBS='-j3'
# to add a load average limit, specify it as (for example) NUMJOBS='-j6 -l4.5'
# or leave it blank to have this automatically determined:
#   -j$(( $(nproc) * 2 )) -l$(( $(nproc) + 1 ))"
NUMJOBS=''

# Arch for building.
# Leave blank to have this automatically determined by the build host:
ARCH=''

# Tag for built packages.
TAG='_%REPO%'

# Package compression type.
# Valid values are: tgz, txz, tbz, tlz
PKGTYPE='txz'

#-------------------------------------------------------------------------------
# Defaults for slackrepo control arguments.
# For more details see 'man slackrepo'.

VERBOSE='n'
VERY_VERBOSE='n'
DRY_RUN='n'
INSTALL='n'
CHROOT='/'
LINT='n'
KEEP_TMP='n'
COLOR='auto'
NICE='5'
NOWARNING=''

#-------------------------------------------------------------------------------
# Start and finish hooks
# you can add your own hooks and/or replace the existing hooks

HOOK_START=( gitfetch_hook )
HOOK_FINISH=( genrepos_hook )

#-------------------------------------------------------------------------------
# Variables for calling gen_repos_files.sh

# Change this to '1' if you want to enable gen_repos_files.sh
# If enabled, you *must* set correct values for all the variables below!
USE_GENREPOS='0'

# Don't change this! it is needed so gen_repos_files.sh can find your packages
REPOSROOT="$PKGREPO"

# Repository maintainer
REPOSOWNER="Local administrator <root@localhost>"

# The GPG key for the repository owner can contain a different string than
# the value of $REPOSOWNER . If you leave $REPOSOWNERGPG empty, the script will
# use the value you've set for $REPOSOWNER instead to search the GPG keyfile.
REPOSOWNERGPG=""

# Under what URL is the repository accessible:
# (this is just an example, you will need to setup the http server)
DL_URL="http://localhost/pkgrepo/%REPO%/%SLACKVER%/%ARCH%"

# The title of the generated RSS feed:
RSS_TITLE="Local SlackBuild Packages"

# The logo picture used for the RSS feed:
RSS_ICON="http://www.slackware.com/~alien/graphics/blueorb.png"

# The URL linked to when clicking on the logo:
RSS_LINK="${DL_URL}/ChangeLog.txt"

# URL to the full changelog.txt:
RSS_CLURL="${DL_URL}/ChangeLog.txt"

# The descriptive text for the RSS feed:
RSS_DESCRIPTION="Local SlackBuild Packages"

# Maximum number of RSS feed entries to display:
RSS_FEEDMAX=15

# The RSS generator must use a unique feed identifier.
# Generate one for your feed by using the string returned by "uuidgen -t":
RSS_UUID=""

# Either use gpg or gpg2:
GPGBIN="/usr/bin/gpg"

# Optionally use gpg-agent to cache the gpg passphrase instead of letting the
# script keep it in the environment (note that if you define USE_GPGAGENT=1
# but gpg-agent is not running, you will get prompted for a passphrase every
# single time gpg runs):
USE_GPGAGENT="0"

# Generate slack-requires, slack-suggests, and slack-conflicts lines in the
# metadata files by setting FOR_SLAPTGET to "1" -- these are used by slapt-get
FOR_SLAPTGET="0"

# Follow symlinks in case the repository has symlinks like 14.0 -> 13.37
# indicating that one package works for those two Slackware releases.
# If the script does _not_ follow symlinks, then the symlinks will appear in
# the repository listing instead of the packages they point to.
FOLLOW_SYMLINKS="1"

# If the repository has separate package subdirectories then define them here.
# Separate FILELIST.TXT, MANIFEST etc.. files will be created for all of them.
REPO_SUBDIRS=""

# If you want to exclude certain directories or files from being included
# in the repository metadata, define them here (space-separated).
# Example: REPO_EXCLUDES="RCS logs .genreprc"
# .revision files were created by a previous release of slackrepo:
REPO_EXCLUDES=".revision"

#-------------------------------------------------------------------------------
# Variables for creating the SlackBuild repository if it does not already exist

# URL of the remote git repo to be cloned:
INIT_GITCLONE='https://github.com/Ponce/slackbuilds.git'

# Git branch to set up: %SLACKVER% is '14.2' for Slackware 14.2, etc
INIT_GITBRANCH='current'

#-------------------------------------------------------------------------------
# Interesting environment variables you can set :-)

# Use multithreaded xz compression (decompression is still single threaded)
export XZ_OPT="--threads=0"

# Use clang instead of gcc
# (doesn't work with all packages)
# export CC=clang
# export CXX=clang++

# Use distcc
# (requires additional setup, doesn't work with all packages)
# export DISTCC_HOSTS="otherhost localhost"

# Customise slackrepo's colour palette (similar to LS_COLORS and GCC_COLORS)
# export SLACKREPO_COLORS="error=01;31:warning=01;35:success=01;32:important=01:normal=00:info=22;36:ok=00:build=22;32:skip=22;35:fail=22;31:updated=22;36"
